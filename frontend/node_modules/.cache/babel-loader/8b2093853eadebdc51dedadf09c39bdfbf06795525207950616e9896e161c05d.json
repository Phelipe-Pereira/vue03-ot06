{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      senha: '',\n      error: '',\n      loading: false\n    };\n  },\n  methods: {\n    async login() {\n      this.loading = true;\n      this.error = '';\n      try {\n        const response = await api.post('/usuarios/login', {\n          email: this.email,\n          senha: this.senha\n        });\n        localStorage.setItem('token', response.data.token);\n        this.$router.push('/usuarios');\n      } catch (err) {\n        this.error = err.response?.data?.error || 'Erro ao fazer login';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","email","senha","error","loading","methods","login","response","post","localStorage","setItem","token","$router","push","err"],"sources":["C:\\ADS - SENAI\\Trilha Vuejs v.3.x.x\\Projetos\\ot-06\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <input \r\n          v-model=\"email\" \r\n          type=\"email\" \r\n          placeholder=\"Email\" \r\n          required\r\n          :class=\"{ 'error': error }\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input \r\n          v-model=\"senha\" \r\n          type=\"password\" \r\n          placeholder=\"Senha\" \r\n          required\r\n          :class=\"{ 'error': error }\"\r\n        />\r\n      </div>\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        {{ error }}\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? 'Entrando...' : 'Entrar' }}\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      senha: '',\r\n      error: '',\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      this.loading = true\r\n      this.error = ''\r\n      \r\n      try {\r\n        const response = await api.post('/usuarios/login', {\r\n          email: this.email,\r\n          senha: this.senha\r\n        })\r\n        \r\n        localStorage.setItem('token', response.data.token)\r\n        this.$router.push('/usuarios')\r\n      } catch (err) {\r\n        this.error = err.response?.data?.error || 'Erro ao fazer login'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\ninput {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput.error {\r\n  border-color: #ff4444;\r\n}\r\n\r\n.error-message {\r\n  color: #ff4444;\r\n  font-size: 14px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #a8d5c2;\r\n  cursor: not-allowed;\r\n}\r\n</style> "],"mappings":"AAiCA,OAAOA,GAAE,MAAO,gBAAe;AAE/B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI,CAACF,OAAM,GAAI,IAAG;MAClB,IAAI,CAACD,KAAI,GAAI,EAAC;MAEd,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMT,GAAG,CAACU,IAAI,CAAC,iBAAiB,EAAE;UACjDP,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,KAAK,EAAE,IAAI,CAACA;QACd,CAAC;QAEDO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACP,IAAI,CAACW,KAAK;QACjD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW;MAC/B,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACX,KAAI,GAAIW,GAAG,CAACP,QAAQ,EAAEP,IAAI,EAAEG,KAAI,IAAK,qBAAoB;MAChE,UAAU;QACR,IAAI,CAACC,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}